#!/bin/zsh



# $1 : expect length
# $2 : the string to repeat
function fill() {
    repeat $1; print -n $2
}

# Create screen buffer
# $1: height
# $2: width
function screen.create() {
    local h=$1
    local w=$2
    local l=$(fill w "#")
    repeat h; print $l
}

# calc text dim (height width)
# $1: var name
function screen.dim() {
    local name=$1
    local w t
    t=${(t)${(P)name}}
    [[ $t == scalar ]] && {
        print 1 ${#${(P)name}}
        return
    }

    for x in ${(P)name}; do
        w=$(( $#x > w ? $#x : w));
    done
    print ${#${(P)name}} $w 
}

function max() {
    print $(( $1 > $2 ? $1 : $2))
}

# $1 : screen buffer
# $2 : top
# $3 : left
# $4 : draw object
# SCREEN WIDTH HEIGHT
function screen.draw() {
    local -a screen obj
    screen=("${(@f)SCREEN}")
    obj=("${(@f)3}")
    local top=$1
    local left=$2

    integer i=1 width=0
    for o in $obj; do
        line=$screen[i+top]
        screen[i+top]="$line[1,left]${o}${line[$#o+left+1,-1]}"
        i=i+1
        width=$(max $#o width)
    done
    
    # set external var
    HEIGHT=$#obj
    WIDTH=$width
    SCREEN=$(print -l $screen)
}

function screen.inline() {
    local SCREEN=$(screen.create 20 100)
    local HEIGHT=0 WIDTH=0
    local -i top left
    for elem in $argv; do
        screen.draw $top $left "${elem}"
        left+=$WIDTH
    done
    print -l $SCREEN
}

a="
|1 2 3 9|
|4 5 6 1|
"

b="

+

"

#screen.draw "$(screen.create 10 20)" 3 3 "$b"

screen.inline "$a" "b" "$a"

