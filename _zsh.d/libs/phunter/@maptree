#!/bin/zsh
(
function instance() {
    function keyset() {
        #for x in ${(k)map}; do
        for x in $keyset; do
            [[ "$(basename $x)" == @* ]] || echo $x 
        done
    }

    function attrs() {
        local key=$1
        #for x in ${(k)map}; do
        for x in $keyset; do
            [[ $(basename $x) == @* ]] && [[ $(dirname $x) == $key ]] && {
                echo $x
            }
        done
    }


    local key=$1
    [[ "$(basename $key)" == @* ]] && return
    local -a subnode

    # expose attrs
    for attr in $(attrs $key); do
        local ${$(basename $attr)#@}=$map[$attr]
    done

    # instance direct child node 
    for x in $(keyset); do
        [[ $(dirname $x) == $key ]] && {
            subnode+=$(instance $x)
        }
    done

    [[ $key =~ $pattern ]] && {
        echo ${(e)_template}
    }
    #echo ${(e)map[$key]}
}



#~~
typeset -gA map
map[root]=
map[root/@name]=root
map[root/a]=
map[root/a/@name]=nameA
map[root/a/@age]=10
map[root/b]=
map[root/b/d]=
map[root/b/d/@name]=D
map[root/b/@name]=nameB
map[root/b/@age]=20
map[root/b/e]=
map[root/b/e/@name]=E
map[root/b/e/c]=
map[root/b/e/c/@name]=CC
map[root/b/e/x]=
map[root/b/e/y/e]=
map[root/b/e/y/e/@name]=EEE
map[root/b/e/x/@name]=X

local -a keyset
keyset=(${(k)map})

local _template="$(<&0)"
local _pattern=$2

#typeset -p _template
#typeset -p _pattern
instance $*
)
