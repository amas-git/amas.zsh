#!/bin/zsh
MATRIX_MAGIC=@MATRIX

local -A omap
local ___filter

zparseopts -A omap -D -K -- c:=omap o:=omap f:=omap
___filter=$omap[-f]

function ismatrix() {
    local vname=$1
    [[ ${(tP)vname} == array ]] && [[ ${${(P)vname}[1]} == $MATRIX_MAGIC ]] && (( ${(P)#vname} >= 3 )) && return 0
    return 1
}


local ___oname=$argv[$argv[(i)--]+1]
local ___input="$(<&0)"

# define output variable array
[[ -n $___oname ]] && {
    typeset -ga $___oname
}

for mname in $argv; do
    [[ -z $mname ]] && continue 

    ismatrix $mname || continue

    local header_len=${${(P)mname}[2]}
    local -a xs
    local header=
    header=${${(P)mname}[3,3+$header_len-1]}
    xs=("${(@P)mname}")
    <<< $___input @emap -c $header -o "$___oname" -f "$___filter" -- "${(@)xs[3+$header_len,-1]}"
done
