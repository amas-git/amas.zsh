#!/bin/zsh
(
DIRMAP_HOME=~/.zsh.d/libs/phunter/@dirmap.f
autoload.d $DIRMAP_HOME

function mimetype() {
    echo ${$(file --mime-type "$1")#*:}
}

typeset -gA mimetype
mimetype[png]=image/png
mimetype[9.png]=image/png
mimetype[jpg]=image/jpg
mimetype[zip]=application/zip
mimetype[xml]=application/xml
mimetype[txt]=text/plain

source $DIRMAP_HOME/mimetype

function _suffix() {
    local -a segment
    segment=(${(s:.:)1})
    print "${segment[-1]}"
}

function _mimetype() {
   [[ -f $1 ]] && {
       local -a segment
       segment=(${(s:.:)1})
       local suffix="${segment[-1]}"
       print ${mimetype[$suffix]}
   }

   [[ -d $1 ]] && {
       print "inode/directory"
       return
   }
}

function addattr() {
    local k="$1"
    local n="$2"
    local v="$3"

    [[ -n dirmap[$k] ]] && {
        dirmap[$k/@${n}]="$v"
        return
    }
    return 1
}

function addelem() {
    local k="$1"
    local v="$2"

    [[ -n dirmap[$k] ]] && {
        dirmap[$k]=$v    
    }
    return 1
}

# TODO: remove subnode
function rmelem() {
    local k="$1"
    unset "dirmap[$k]"
}

function main() {
    typeset -gA dirmap
    dirmap=()
    for f in **/*; do
        # dirmap[$f]=$(_mimetype $f)
        MIMETYPE=$(_mimetype $f)
        (( $+functions[$MIMETYPE] )) && {
            # dirmap[$f]=$(_mimetype $f)
            $MIMETYPE $f
        }
        # addattr $f "basename" "$(basename $f)"
    done

    for x in ${(ok)dirmap}; do
        print $x    : $dirmap[$x]
    done
}

main $*
)
